plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.9.22"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.22"
    id "org.jetbrains.kotlin.kapt" version "1.9.22"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.0"
    id "org.springframework.boot" version "2.5.6"
    id "io.spring.dependency-management" version "1.1.0"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

ext {
    springBootVersion = "2.5.6"
    logstashLayoutVersion = "1.0.5"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

repositories {
    mavenCentral()
}

ktlint {
    version.set("1.2.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

configurations {
    implementation {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
        exclude group: "ch.qos.logback"
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-log4j2"

    implementation "com.vlkan.log4j2:log4j2-logstash-layout:$logstashLayoutVersion"
    kapt "org.apache.logging.log4j:log4j-core"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

processResources {
    filesMatching(["**/properties-from-gradle.properties"]) {
        expand(project.properties)
    }
}

gitProperties {
    dateFormat = "dd.MM.yyyy HH:mm:ss"
    dateFormatTimeZone = "Europe/Moscow"
    extProperty = "gitProps"
}

generateGitProperties.outputs.upToDateWhen { false }

bootJar {
    archiveFileName = "${project.name}.jar"

    manifest {
        attributes(
            "Application-Name": "${project.name}",
            "Application-Version": "${project.version}",
            "Git-Branch": "${-> project.ext.gitProps["git.branch"]}",
            "Build-Revision": "${-> project.ext.gitProps["git.commit.id.abbrev"]}",
            "Commit-Time": "${-> project.ext.gitProps["git.commit.time"]}"
        )
    }
}

jar {
    enabled = false
}
